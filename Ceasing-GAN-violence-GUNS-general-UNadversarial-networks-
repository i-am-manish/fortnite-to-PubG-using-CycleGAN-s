# Ceasing-GAN-violence-GUNS-general-UNadversarial-networks-

GANS are indeed AI’s bleeding new edge(#Ian goodfellow),but on the basis of how they work,the Discriminator(D) and Generator(G) compete with each other and try to overpower the other.This sometimes can result in other way around.Contrary to this,happy networks are productive networks, laying the groundwork for advances in motivational AI and deep-learning.



So,recently GUNS were proposed (link of research paper is provided below),where fighting is strictly off and both models learn to respect their differences.

![screenshot 54](https://user-images.githubusercontent.com/30951565/42412641-b2e02ac6-822d-11e8-8d1e-31852acc31cc.png)

Basic working
Here,Generator G proposes samples and outputs Props & in return gets acknowledgement Acks by motivator M.It can be viewed as a two-player game in which both players work as a team to achieve the best score(unlike rivalry in GANS).

Mathematically,we refine model as D,G:=G,D and compute cost function as C(V )=α *(integral of βV (G)) where βV is a violent mapping from discriminator to the closest mathematical structure and α is a constant representing the cost of violence.

Under GUNS(general unadversarial networks),we train a generator G which gets whatever best data it can feel & manage and a motivator M which assists G to get its goal.

![screenshot 55](https://user-images.githubusercontent.com/30951565/42412646-d9fb6544-822d-11e8-9041-72168c843dd9.png)

(a)GUNs are trained by updating generator(yellow line) with help from motivator(red line) to reach its dream of data distribution (blue dashed). (b)G has reached its goal. (c)G is so hyped that it achieves 110%,moving it further 10% past the data…!!!
A simple implementation is:

def train:
for #epochs do:
Generate n noise samples and compute G(z^(1); θg), …G(z^(n);θg).
Sample n data samples x(1), …x(n) from the data distribution.
Let G show pairs (x(i) , G(z(i) ; θg)) to Motivator M.
Sample criticised and motivational comments from Motivator.
Update θG & calculate loss function
Now,Results were cool & AMAZING…

![screenshot 56](https://user-images.githubusercontent.com/30951565/42412652-e9543502-822d-11e8-8aa0-3320ed7ce4ad.png)

First Four columns represent generated digits and last column(inside yellow box) are training mnist dataset
Quite astonishing results compared to gans………GUNS produce quite clear,convenient cherry picked images….
